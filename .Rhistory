path = buildPath("approximateTerm"),
query = list(term = "morphine", maxEntries=10))
aa<- unlist(content(a))
aa <- data.frame(value = aa, names = names(aa))
filter(aa, names == 'approximateGroup.candidate.rxcui')
filter(aa, names == 'approximateGroup.candidate.rxaui')
aa %>% filter(names == 'approximateGroup.candidate.rxaui') %>%
n_distinct(value)
aa %>% filter(names == 'approximateGroup.candidate.rxaui')
aa %>% filter(names == 'approximateGroup.candidate.rxaui') %>%
n_distinct()
aa %>% filter(names == 'approximateGroup.candidate.rxaui') %>% select(value) %>%
n_distinct()
aa %>% filter(names == 'approximateGroup.candidate.rxaui') %>% select(value)
aa %>% filter(names == 'approximateGroup.candidate.rxcui') %>% select(value) %>%
n_distinct()
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = "morphine", maxEntries=1))
aa<- unlist(content(a))
aa <- data.frame(value = aa, names = names(aa))
aa %>% filter(names == 'approximateGroup.candidate.rxcui') %>% select(value) %>%
n_distinct()
aa
a<- GET("https://rxnav.nlm.nih.gov/REST/approximateTerm?term=aspirin&maxEntries=1")
aa<- unlist(content(a))
aa <- data.frame(value = aa, names = names(aa))
aa
a<- GET("https://rxnav.nlm.nih.gov/REST/approximateTerm?term=aspirin&maxEntries=2")
aa<- unlist(content(a))
aa <- data.frame(value = aa, names = names(aa))
aa
a<- GET("https://rxnav.nlm.nih.gov/REST/approximateTerm?term=aspirin&maxEntries=20")
aa<- unlist(content(a))
aa <- data.frame(value = aa, names = names(aa))
aa
a<- GET("https://rxnav.nlm.nih.gov/REST/approximateTerm?term=aspirin&maxEntries=200")
aa<- unlist(content(a))
aa <- data.frame(value = aa, names = names(aa))
aa
a<- GET("https://rxnav.nlm.nih.gov/REST/approximateTerm?term=aspirin&maxEntries=2000")
aa<- unlist(content(a))
aa <- data.frame(value = aa, names = names(aa))
aa
aa %>% filter(names == 'approximateGroup.candidate.rxaui') %>% select(value) %>%
n_distinct()
aa %>% filter(names == 'approximateGroup.candidate.rxcui') %>% select(value) %>%
n_distinct()
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = "morphine", maxEntries=1))
aa<- unlist(content(a))
aa
aa <- data.frame(value = aa, names = names(aa))
aa
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = "lipitor", maxEntries=1))
aa<- unlist(content(a))
aa <- data.frame(value = aa, names = names(aa))
aa
aa %>% filter(names == 'approximateGroup.candidate.rxcui') %>% select(value)
aa %>% filter(names == 'approximateGroup.candidate.rxaui') %>% select(value)
aa<- unlist(content(a))
aa
aa['approximateGroup.candidate.rxcui']
aa['approximateGroup.candidate.rxaui']
aa
subset(aa, names(aa) == 'approximateGroup.candidate.rxcui')
unique(subset(aa, names(aa) == 'approximateGroup.candidate.rxcui'))
df <- data.frame(string = string, rxcui = unique(subset(aa, names(aa) == 'approximateGroup.candidate.rxcui')))
string = "lipitor"
df <- data.frame(string = string, rxcui = unique(subset(aa, names(aa) == 'approximateGroup.candidate.rxcui')))
drugs <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
library(readxl)
drugs <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
drugs <- drugs[1:3]
drugs[1:3]
drugs[1:3,]
drugs_rxcui <- data.frame(string_name = NA, rxcui = NA)
drugs_rxcui
drugs <- drugs[1,]
for(i in 1:nrow(drugs)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = , maxEntries=1))
a<- unlist(content(a))
drugs_rxcui <- rbind(drugs_rxcui,
data.frame(drug_string = string,
rxcui = unique(subset(a, names(a) == 'approximateGroup.candidate.rxcui'))))
}
drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
for(i in 1:nrow(drugs)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = , maxEntries=1))
a<- unlist(content(a))
drugs_rxcui <- rbind(drugs_rxcui,
data.frame(drug_string = string,
rxcui = unique(subset(a, names(a) == 'approximateGroup.candidate.rxcui'))))
}
nrow(drugs)
drugs[1,]
drugs <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drugs <- drugs[1,]
drugs <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drugs <- drugs[1,]
drugs
for(i in 1:nrow(drugs)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drugs$drug_name[i]))
a<- unlist(content(a))
drugs_rxcui <- rbind(drugs_rxcui,
data.frame(drug_string = drugs$drug_name[i],
rxcui = unique(subset(a, names(a) == 'approximateGroup.candidate.rxcui'))))
}
drugs_rxcui
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drugs$drug_name[i]))
a<- unlist(content(a))
a
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drugs$drug_name[i]))
unlist(content(a))
unlist(content(a)
)
a<- data.frame(var_name = names(unlist(content(a))), value = unlist(content(a))
)
a
drugs <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drugs$drug_name[78]))
a<- data.frame(var_name = names(unlist(content(a))), value = unlist(content(a)))
a
fromJSON(content(a, 'text'))
content(a, 'text')
content(a)
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drugs$drug_name[78]))
content(a)
content(a, 'text')
fromJSON(content(a, 'text'))
fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1)
a
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a
a <- filter(a, rank == 1)
a <- filter(a, rank == 1)
a
a <- unique(a)
a
duplicated(a$rxcui)
a <- select(a[duplicated(a$rxcui),], rxcui, score)
a
i=78
drugs$drug_name[i]
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drugs$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1)
a
a <- select(a[duplicated(a$rxcui),], rxcui, score)
a
a$drug_name = drugs$drug_name[i]
a
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- drug_strings[1:5,]
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- drug_strings[1:5,]
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
for(i in 1:nrow(drug_strings)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1)
a <- select(a[duplicated(a$rxcui),], rxcui, score)
a$drug_name = drug_strings$drug_name[i]
}
i
i=1
drug_top_rxcui
a
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1)
a <- select(a[duplicated(a$rxcui),], rxcui, score)
a$drug_name = drug_strings$drug_name[i]
a
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- drug_strings[1:5,]
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
for(i in 1:nrow(drug_strings)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1)
a <- select(a[duplicated(a$rxcui),], rxcui, score)
a$drug_name = drug_strings$drug_name[i]
drug_top_rxcui <- bind_rows(drug_top_rxcui, a)
}
i
drug_top_rxcui
a
i=2
i
drug_strings$drug_name[i]
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1)
a <- select(a[duplicated(a$rxcui),], rxcui, score)
a$drug_name = drug_strings$drug_name[i]
a
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a
a <- filter(a, rank == 1)
a
drug_top_rxcui
a <- select(a[duplicated(a$rxcui),], rxcui, score)
a$drug_name = drug_strings$drug_name[i]
i
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1)
a
a[duplicated(a$rxcui),]
duplicated(a$rxcui)
a <- select(a, rxcui, score)
a
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- drug_strings[1:5,]
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
for(i in 1:nrow(drug_strings)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1)
a <- select(a, rxcui, score)
a$drug_name = drug_strings$drug_name[i]
drug_top_rxcui <- bind_rows(drug_top_rxcui, a)
}
drug_top_rxcui
duplicated(a$rxcui)
duplicated(drug_top_rxcui$rxcui)
!duplicated(drug_top_rxcui$rxcui)
drug_strings
sample_n(drug_strings, 5)
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
sample_n(drug_strings, 5)
drug_strings <- sample_n(drug_strings, 5)
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
for(i in 1:nrow(drug_strings)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1) %>% select(rxcui, score)
a$drug_name = drug_strings$drug_name[i]
drug_top_rxcui <- bind_rows(drug_top_rxcui, a)
}
drug_top_rxcui
duplicated(drug_top_rxcui)
a<- drug_top_rxcui[!duplicated(drug_top_rxcui),]
a
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- sample_n(drug_strings, 5)
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- sample_n(drug_strings, 5)
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
for(i in 1:nrow(drug_strings)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1) %>% select(rxcui, score)
a$drug_name = drug_strings$drug_name[i]
drug_top_rxcui <- bind_rows(drug_top_rxcui, a)
}
drug_top_rxcui
drug_top_rxcui <- drug_top_rxcui[!duplicated(drug_top_rxcui),]
drug_top_rxcui
drug_top_rxcui <- drug_top_rxcui %>%
group_by(ENTECAVIR) %>%
summarize(num_duplicate_drug_name = n()) %>%
ungroup() %>%
group_by(rxcui) %>%
summarize(num_duplicate_rxcui = n()) %>%
ungroup()
drug_top_rxcui
drug_top_rxcui %>%
group_by(ENTECAVIR) %>%
summarize(num_duplicate_drug_name = n()) %>%
ungroup()
drug_top_rxcui %>%
group_by(drug_name) %>%
summarize(num_duplicate_drug_name = n()) %>%
ungroup()
drug_top_rxcui <- left_join(drug_top_rxcui, drug_top_rxcui %>%
group_by(drug_name) %>%
summarize(num_duplicate_drug_name = n()) %>%
ungroup(),
by = 'drug_name')
drug_top_rxcui
drug_top_rxcui <- left_join(drug_top_rxcui, drug_top_rxcui %>%
group_by(rxcui) %>%
summarize(num_duplicate_rxcui = n()) %>%
ungroup(),
by = 'drug_name')
drug_top_rxcui <- left_join(drug_top_rxcui, drug_top_rxcui %>%
group_by(rxcui) %>%
summarize(num_duplicate_rxcui = n()) %>%
ungroup(),
by = 'rxcui')
drug_top_rxcui
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- sample_n(drug_strings, 50)
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
for(i in 1:nrow(drug_strings)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1) %>% select(rxcui, score)
a$drug_name = drug_strings$drug_name[i]
drug_top_rxcui <- bind_rows(drug_top_rxcui, a)
}
drug_top_rxcui <- drug_top_rxcui[!duplicated(drug_top_rxcui),]
drug_top_rxcui <- left_join(drug_top_rxcui, drug_top_rxcui %>%
group_by(drug_name) %>%
summarize(num_duplicate_drug_name = n()) %>%
ungroup(),
by = 'drug_name')
drug_top_rxcui <- left_join(drug_top_rxcui, drug_top_rxcui %>%
group_by(rxcui) %>%
summarize(num_duplicate_rxcui = n()) %>%
ungroup(),
by = 'rxcui')
drug_top_rxcui
library(httr)
library(jsonlite)
library(dplyr)
library(readxl)
getConceptInfo <- T #Do you want to query each rxcui that has been matched to expand its properties?
defaultTimeout <- 5 #Timeout for the API calls
test <- F #Just to print out some tests of the main requesting functions
# API parameters
base_url <- "http://rxnav.nlm.nih.gov/"
basePath <- "REST"
extension <- ".json"
buildPath <- function(action, suffix = NA, extend = TRUE) {
#Builds the path used to query the RxNorm API
paste0(basePath, "/",
action,
ifelse(is.na(suffix), "", paste0("/", suffix)),
ifelse(extend, extension, ""))
}
buildPath("rxcui")
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- sample_n(drug_strings, 5)
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
i=1
drug_strings$drug_name[i]
base_url
buildPath("approximateTerm")
for(i in 1:nrow(drug_strings)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1) %>% select(rxcui, score)
a$drug_name = drug_strings$drug_name[i]
drug_top_rxcui <- bind_rows(drug_top_rxcui, a)
}
drug_top_rxcui
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- sample_n(drug_strings, 5)
drug_strings
drug_top_rxcui
# install.packages("rstudioapi")
# rstudioapi::isAvailable("0.99.149")
library(httr)
library(jsonlite)
library(dplyr)
library(readxl)
# Parameters of the script -----------------------------------------------
getConceptInfo <- T #Do you want to query each rxcui that has been matched to expand its properties?
defaultTimeout <- 5 #Timeout for the API calls
test <- F #Just to print out some tests of the main requesting functions
# API parameters
base_url <- "http://rxnav.nlm.nih.gov/"
basePath <- "REST"
extension <- ".json"
buildPath <- function(action, suffix = NA, extend = TRUE) {
#Builds the path used to query the RxNorm API
paste0(basePath, "/",
action,
ifelse(is.na(suffix), "", paste0("/", suffix)),
ifelse(extend, extension, ""))
}
buildPath("rxcui")
base_url
drug_strings <- read_excel("C:/Users/arbourg/Desktop/Rx Norm Project/drug_examples.xlsx")
#drugs_rxcui <- data.frame(drug_string = NA, rxcui = NA)
drug_strings <- sample_n(drug_strings, 5)
drug_strings
drug_top_rxcui <- data.frame(rxcui = NA, score = NA, drug_name = NA)
i=1
drug_strings$drug_name[i]
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a
for(i in 1:nrow(drug_strings)){
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
a<- fromJSON(content(a, 'text'))$`approximateGroup`$candidate
a <- filter(a, rank == 1) %>% select(rxcui, score)
a$drug_name = drug_strings$drug_name[i]
drug_top_rxcui <- bind_rows(drug_top_rxcui, a)
}
drug_top_rxcui
drug_top_rxcui %>% distinct(rxcui, score, drug_name)
a <- GET(url = base_url,
path = buildPath("approximateTerm"),
query = list(term = drug_strings$drug_name[i]))
fromJSON(content(a, 'text'))$`approximateGroup`$candidate
library(devtools)
devtools::install_github("klumetis/roxygen")
library(roxygen2)
getwd()
create("test_package")
usethis::create_package("testpkg")
log(1)
log(2)
log(3)
exp(2)
exp(3)
log(7.38)
2^2
2^2.5
2^2.8
2^2.9
2^2.73
ln(2)
log(2, base = 10)
log(10, base = 10)
log(2.718)
devtools::has_devel()
library(devtools)
devtools::has_devel()
?create
library(ggplot2)
df <- mtcars
df
sample(1,1:4)
sample(5,1:4)
sample(x = c("Spivak", "Roberts", "Charlton"), replace = T, size = nrow(df))
df$md <-sample(x = c("Spivak", "Roberts", "Charlton"), replace = T, size = nrow(df))
hist(df$drat)
ggplot(df, aes(x = drat)) + geom_density()
ggplot(df, aes(x = drat)) + stat_ecdf()
ggplot(df, aes(x = drat, colour = md)) + stat_ecdf()
devtools::document()
setwd("C:/Users/arbourg/Desktop/Rx Norm Project")
devtools::document()
devtools::load_all()
setwd("C:/Users/arbourg/Desktop/Rx Norm Project/RxClassR")
devtools::load_all()
devtools::document()
term = "zocor 2010 20mm"
maxEntries = 20
option = 0
params <- list(term = term,
maxEntries = maxEntries,
option = option)
GET(base_url, path = "REST/approximateTerm.json", query = params)
GET(base_url, path = "REST/approximateTerm.json", query = params, timeout(1))
library(httr)
GET(base_url, path = "REST/approximateTerm.json", query = params, timeout(1))
devtools::document()
devtools::test()
R.version.string
